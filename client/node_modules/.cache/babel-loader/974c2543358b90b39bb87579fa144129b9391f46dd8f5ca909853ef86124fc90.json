{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piyus\\\\Documents\\\\Node\\\\ChatApp\\\\client\\\\src\\\\components\\\\chat\\\\ChatBody.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport bodyBg from \"../bodyBg.jpg\";\nimport ChatFooter from \"./ChatFooter.js\";\nimport { AuthContext } from \"../context/AccountAuth\";\nimport { getMessages, newMessage } from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatBody({\n  person,\n  conversation\n}) {\n  _s();\n  const {\n    account\n  } = useContext(AuthContext);\n  const [value, setValue] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const getMessageDetails = async () => {\n      let data = await getMessages(conversation._id);\n      setMessages(data);\n    };\n    getMessageDetails();\n  }, [person._id, conversation._id]);\n  const sendText = async e => {\n    if (e.keyCode === 13) {\n      let message = {\n        senderId: account.sub,\n        receiverId: person.sub,\n        conversationId: conversation._id,\n        type: \"text\",\n        text: value\n      };\n      await newMessage(message);\n      setValue(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: `url(${bodyBg})`,\n        height: \"78vh\"\n      },\n      children: messages && messages.map(message => message.text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {\n      sendText: sendText,\n      setValue: setValue,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatBody, \"PpTTXagUshOzCL+NQkqtb4NHM3o=\");\n_c = ChatBody;\nvar _c;\n$RefreshReg$(_c, \"ChatBody\");","map":{"version":3,"names":["React","useContext","useEffect","useState","bodyBg","ChatFooter","AuthContext","getMessages","newMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBody","person","conversation","_s","account","value","setValue","messages","setMessages","getMessageDetails","data","_id","sendText","e","keyCode","message","senderId","sub","receiverId","conversationId","type","text","children","style","backgroundImage","height","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/piyus/Documents/Node/ChatApp/client/src/components/chat/ChatBody.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport bodyBg from \"../bodyBg.jpg\";\r\nimport ChatFooter from \"./ChatFooter.js\";\r\nimport { AuthContext } from \"../context/AccountAuth\";\r\nimport { getMessages, newMessage } from \"../../services/api\";\r\n\r\nexport default function ChatBody({ person, conversation }) {\r\n  const { account } = useContext(AuthContext);\r\n  const [value, setValue] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMessageDetails = async () => {\r\n      let data = await getMessages(conversation._id);\r\n      setMessages(data);\r\n    };\r\n    getMessageDetails();\r\n  }, [person._id, conversation._id]);\r\n\r\n  const sendText = async (e) => {\r\n    if (e.keyCode === 13) {\r\n      let message = {\r\n        senderId: account.sub,\r\n        receiverId: person.sub,\r\n        conversationId: conversation._id,\r\n        type: \"text\",\r\n        text: value,\r\n      };\r\n\r\n      await newMessage(message);\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ backgroundImage: `url(${bodyBg})`, height: \"78vh\" }}>\r\n        {messages && messages.map((message) => message.text)}\r\n      </div>\r\n      <ChatFooter sendText={sendText} setValue={setValue} value={value} />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,WAAW,EAAEC,UAAU,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7D,eAAe,SAASC,QAAQA,CAAC;EAAEC,MAAM;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACzD,MAAM;IAAEC;EAAQ,CAAC,GAAGhB,UAAU,CAACK,WAAW,CAAC;EAC3C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMoB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAIC,IAAI,GAAG,MAAMhB,WAAW,CAACQ,YAAY,CAACS,GAAG,CAAC;MAC9CH,WAAW,CAACE,IAAI,CAAC;IACnB,CAAC;IACDD,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACR,MAAM,CAACU,GAAG,EAAET,YAAY,CAACS,GAAG,CAAC,CAAC;EAElC,MAAMC,QAAQ,GAAG,MAAOC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,OAAO,KAAK,EAAE,EAAE;MACpB,IAAIC,OAAO,GAAG;QACZC,QAAQ,EAAEZ,OAAO,CAACa,GAAG;QACrBC,UAAU,EAAEjB,MAAM,CAACgB,GAAG;QACtBE,cAAc,EAAEjB,YAAY,CAACS,GAAG;QAChCS,IAAI,EAAE,MAAM;QACZC,IAAI,EAAEhB;MACR,CAAC;MAED,MAAMV,UAAU,CAACoB,OAAO,CAAC;MACzBT,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACEzB,OAAA;MAAK0B,KAAK,EAAE;QAAEC,eAAe,EAAG,OAAMjC,MAAO,GAAE;QAAEkC,MAAM,EAAE;MAAO,CAAE;MAAAH,QAAA,EAC/Df,QAAQ,IAAIA,QAAQ,CAACmB,GAAG,CAAEX,OAAO,IAAKA,OAAO,CAACM,IAAI;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACNjC,OAAA,CAACL,UAAU;MAACoB,QAAQ,EAAEA,QAAS;MAACN,QAAQ,EAAEA,QAAS;MAACD,KAAK,EAAEA;IAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACpE,CAAC;AAEP;AAAC3B,EAAA,CApCuBH,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}